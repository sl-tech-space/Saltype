# Generated by Django 5.1 on 2024-09-22 05:34

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    operations = [
        migrations.CreateModel(
            name="Diff",
            fields=[
                ("diff_id", models.AutoField(primary_key=True, serialize=False)),
                ("diff", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("del_flg", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "m_diff",
            },
        ),
        migrations.CreateModel(
            name="Lang",
            fields=[
                ("lang_id", models.AutoField(primary_key=True, serialize=False)),
                ("lang", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("del_flg", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "m_lang",
            },
        ),
        migrations.CreateModel(
            name="Rank",
            fields=[
                ("rank_id", models.AutoField(primary_key=True, serialize=False)),
                ("rank", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("del_flg", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "m_rank",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "password",
                    models.CharField(
                        max_length=100,
                    ),
                ),
                (
                    "permission",
                    models.PositiveIntegerField(
                        choices=[(0, "Admin"), (1, "Member")], default=1
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("del_flg", models.BooleanField(default=False)),
                (
                    "rank",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.rank",
                    ),
                ),
            ],
            options={
                "db_table": "m_user",
                "ordering": ["user_id"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Score",
            fields=[
                ("score_id", models.AutoField(primary_key=True, serialize=False)),
                ("score", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "diff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.diff",
                    ),
                ),
                (
                    "lang",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.lang",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "t_score",
            },
        ),
    ]
