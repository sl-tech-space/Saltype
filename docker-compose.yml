services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: nuxt
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/server/data:/app/dist/data
    environment:
      - HOST=0.0.0.0
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: django
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SQL_ENGINE=${DB_ENGINE}
      - SQL_DATABASE=${DB_NAME}
      - SQL_USER=${DB_USER}
      - SQL_PASSWORD=${DB_PASSWORD}
      - SQL_HOST=${DB_HOST}
      - SQL_PORT=${DB_PORT}
      - PYTHONIOENCODING=utf-8
    depends_on:
      - db

  db:
    image: postgres:14
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

  analyze-tool:
    build:
      context: ./analyzeTool
      dockerfile: Dockerfile
    container_name: analyze-tool
    ports:
      - "8501:8501"
    volumes:
      - ./analyzeTool:/app
    environment:
      - WATCHDOG_TIMEOUT=10
      - PYTHONPATH=/app/src
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    command: streamlit run src/main.py --server.runOnSave=true
    depends_on:
      - db
    tty: true

volumes:
  postgres_data:
